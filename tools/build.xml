<project name="seajs-build" default="build" basedir="../">
  <description>SeaJS Build File</description>

  <dirname property="root.dir" file="${ant.file.seajs-build}/../"/>
  <property name="src.dir" location="${root.dir}/src/"/>
  <property name="dist.dir" location="${root.dir}/dist/"/>
  <property name="tmp.dir" location="${dist.dir}/tmp/"/>

  <property name="module.name" value="sea"/>
  <property name="version" value="1.3.0-dev"/>

  <property name="tools.dir" location="${root.dir}/tools/"/>
  <property name="gcc.jar" location="${tools.dir}/compiler.jar"/>
  <property name="charset" value="utf-8"/>

  <property name="src.file" value="${tmp.dir}/${module.name}-src.js"/>
  <property name="debug.file" value="${dist.dir}/${module.name}-debug.js"/>
  <property name="compress.plugins" value="plugin-base.js,plugin-combo.js,plugin-i18n.js,plugin-storage.js"/>


  <!-- 合并 -->
  <target name="concat">

    <!-- 目录准备 -->
    <mkdir dir="${dist.dir}"/>
    <mkdir dir="${tmp.dir}"/>

    <!-- 合并 package 文件 -->
    <concat destfile="${src.file}"
            encoding="${charset}"
            outputencoding="${charset}">

      <path path="${src.dir}/sea.js"/>

      <path path="${src.dir}/util-lang.js"/>
      <path path="${src.dir}/util-log.js"/>
      <path path="${src.dir}/util-path.js"/>
      <path path="${src.dir}/util-fetch.js"/>
      <path path="${src.dir}/util-deps.js"/>

      <path path="${src.dir}/module.js"/>
      <path path="${src.dir}/config.js"/>
      <path path="${src.dir}/prepare.js"/>
      <path path="${src.dir}/bootstrap.js"/>

    </concat>
  </target>


  <!-- 预处理 -->
  <target name="prepare" depends="concat">

    <!-- 版本号替换 -->
    <replaceregexp file="${src.file}"
                   match="%VERSION%"
                   replace="${version}"
                   flags="g"
                   encoding="${charset}"/>

    <!-- 得到 sea-debug.js -->
    <copy file="${src.file}" tofile="${debug.file}" overwrite="true"/>

    <!-- %DEBUG% 替换 -->
    <replaceregexp file="${src.file}"
                   match="%DEBUG%"
                   replace=""
                   flags="g"
                   encoding="${charset}"/>

  </target>

  <target name="prepare_plugins">

    <!-- 复制 plugin 到 dist 目录 -->
    <copy todir="${dist.dir}" overwrite="true">
      <fileset dir="${src.dir}/plugins" includes="*.js"/>
    </copy>

    <!-- 目录准备 -->
    <mkdir dir="${tmp.dir}"/>

    <!-- 将需要压缩的 plugin 移动到 tmp 目录 -->
    <move todir="${tmp.dir}">
      <fileset dir="${dist.dir}" includes="${compress.plugins}"/>
      <mapper type="regexp"
              from="^(.*)\.(js|css)$"
              to="\1-src.\2"/>
    </move>

  </target>


  <!-- 压缩 -->
  <target name="compress">

    <!-- 用 Google Closure Compiler 压缩 JS -->
    <apply executable="java" verbose="true" dest="${dist.dir}" failonerror="true">
      <fileset dir="${tmp.dir}" includes="*-src.js"/>

      <arg line="-jar"/>
      <arg path="${gcc.jar}"/>
      <arg line="--externs ${tools.dir}/extern.js"/>
      <arg line="--compilation_level SIMPLE_OPTIMIZATIONS"/>

      <!-- http://code.google.com/p/closure-compiler/wiki/Warnings -->
      <arg line="--warning_level VERBOSE"/>
      <arg line="--jscomp_off=checkTypes"/>
      <arg line="--jscomp_error=checkDebuggerStatement"/>

      <arg line="--js"/>
      <srcfile/>
      <arg value="--js_output_file"/>
      <targetfile/>
      <mapper type="regexp" from="^(.*)-src\.js$" to="\1.js"/>
    </apply>

  </target>


  <!-- 扫尾 -->
  <target name="destroy">

    <delete dir="${tmp.dir}"/>

  </target>


  <!-- 入口 -->
  <target name="build_seajs" depends="prepare,compress,destroy"/>
  <target name="build_plugins" depends="prepare_plugins,compress,destroy"/>
  <target name="build" depends="prepare,prepare_plugins,compress,destroy"/>

</project>
